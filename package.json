{
  "name": "wechaty",
  "version": "0.23.18",
  "description": "多功能微信linux桌面版",
  "main": "dist/src/main.js",
  "wechaty": {
    "DEFAULT_HEAD": 0,
    "DEFAULT_PORT": 8080,
    "DEFAULT_PROTOCOL": "io|0.0.1",
    "DEFAULT_TOKEN": "WECHATY_IO_TOKEN",
    "DEFAULT_APIHOST": "api.chatie.io"
  },
  "scripts": {
    "clean": "shx rm -fr dist/*",
    "dist": "npm run clean && tsc && shx cp src/puppet-electron/*.js dist/src/puppet-electron/ && shx cp src/*.js dist/src/ && shx mkdir dist/src/icon && shx cp icon/*.png dist/src/icon/",
    "doc": "bash -x scripts/generate-docs.sh",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "changelog": "github_changelog_generator -u chatie -p wechaty && sed -i'.bak' /greenkeeper/d CHANGELOG.md && sed -i'.bak' '/An in-range update of/d' CHANGELOG.md && ts-node scripts/sort-contributiveness.ts < CHANGELOG.md > CHANGELOG.new.md 2>/dev/null && cat CHANGELOG.md >> CHANGELOG.new.md && mv CHANGELOG.new.md CHANGELOG.md",
    "doctor": "npm run check-node-version && ts-node bin/doctor",
    "check-node-version": "check-node-version --node \">= 10\"",
    "lint": "npm run check-node-version && npm run lint:ts && npm run lint:sh",
    "lint:md": "markdownlint README.md",
    "lint:ts": "tslint --project tsconfig.json && tsc --noEmit",
    "lint:sh": "bash -n bin/*.sh",
    "puppet-install": "ts-node bin/puppet-install.ts",
    "sloc": "sloc bin examples scripts src tests --details --format cli-table --keys total,source,comment && sloc bin examples scripts src tests",
    "ts-node": "ts-node",
    "test": "npm run lint && npm run test:unit && npm run test:shell && npm run sloc",
    "test:pack": "bash -x scripts/npm-pack-testing.sh",
    "test:shell": "shellcheck bin/*.sh",
    "test:unit": "blue-tape -r ts-node/register \"src/**/*.spec.ts\" \"src/*.spec.ts\" \"tests/*.spec.ts\" \"tests/**/*.spec.ts\"",
    "test:unit:retry": "ts-node scripts/retry-unit-tests",
    "test:debug": "blue-tape -r ts-node/register src/puppet-web/bridge.spec.ts",
    "typedoc": "bash scripts/typedoc.sh",
    "io-client": "ts-node bin/io-client",
    "demo": "ts-node examples/ding-dong-bot.ts",
    "demo2": "ts-node examples/demo.ts",
    "demo3": "electron ./dist/src/main",
    "start": "npm run demo3",
    "pack": "electron-builder --linux --x64"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chatie/wechaty.git"
  },
  "bin": {
    "wechaty-doctor": "dist/bin/doctor.js",
    "wechaty-io-client": "dist/bin/io-client.js",
    "wechaty-puppet-install": "dist/bin/puppet-install.js",
    "wechaty-version": "dist/bin/version.js"
  },
  "keywords": [
    "wechat",
    "微信",
    "weixin",
    "personal",
    "bot",
    "robot",
    "chatbot",
    "framework",
    "sdk",
    "wechaty",
    "chatie",
    "微信控"
  ],
  "author": "Huan LI <zixia@zixia.net> (https://www.zixia.net)",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/chatie/wechaty/issues"
  },
  "homepage": "https://chatie.io/wechaty/",
  "engines": {
    "node": ">= 10"
  },
  "dependencies": {
    "@types/promise-retry": "^1.1.1",
    "@types/read-pkg-up": "^3.0.1",
    "@types/semver": "^5.5.0",
    "@types/sinon": "^5.0.0",
    "@types/blue-tape": "^0.1.0",
    "@types/puppeteer": "^1.5.0",
    "@types/request": "^2.47.1",
    "@types/ws": "^6.0.0",
    "@types/md5": "^2.1.32",
    "@types/xml2js": "^0.4.3",
    "@types/qr-image": "^3.2.1",
    "@types/cuid": "^1.3.0",
    "@types/mime": "^2.0.0",
    "@types/bl": "^2.1.0",
    "@types/raven": "^2.1.0",
    "blessed-contrib": "^4.8.5",
    "blue-tape": "^1.0.0",
    "glob": "^7.1.0",
    "is-pr": "^1.0.0",
    "qrcode-terminal": "^0.12.0",
    "semver": "^5.5.0",
    "shx": "^0.3.0",
    "sinon": "^6.0.0",
    "bl": "^2.0.1",
    "brolog": "^1.8.1",
    "clone-class": "^0.6.11",
    "cuid": "^2.1.1",
    "file-box": "^0.8.23",
    "hot-import": "^0.2.1",
    "md5": "^2.2.1",
    "memory-card": "^0.6.9",
    "mime": "^2.3.1",
    "npm-programmatic": "0.0.11",
    "pkg-dir": "^3.0.0",
    "portfinder": "^1.0.17",
    "promise-retry": "^1.1.1",
    "puppeteer": "^1.5.0",
    "qr-image": "^3.2.0",
    "raven": "^2.6.2",
    "read-pkg-up": "^4.0.0",
    "request": "^2.87.0",
    "rx-queue": "^0.4.26",
    "rxjs": "^6.2.1",
    "state-switch": "^0.6.2",
    "watchdog": "^0.8.1",
    "wechaty-puppet": "^0.14.1",
    "ws": "^6.0.0",
    "xml2js": "^0.4.19",
    "tuling123-client": "^0.0.2"
  },
  "devDependencies": {
    "@babel/core": "^7.0.1",
    "@babel/node": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@types/blessed": "^0.1.10",
    "@types/blue-tape": "^0.1.0",
    "@types/fluent-ffmpeg": "^2.1.0",
    "@types/fs-extra": "^5.0.3",
    "@types/glob": "^5.0.0p",
    "@types/node": "^10.3.0",
    "@types/pkg-dir": "^2.0.0",
    "@types/lru-cache": "^4.1.1",
    "@wwwouter/tslint-contrib": "^1.0.0",
    "@types/normalize-package-data": "^2.4.0",
    "check-node-version": "^3.0.0",
    "coveralls": "^3.0.0",
    "cross-env": "^5.1.6",
    "fluent-ffmpeg": "^2.1.0",
    "sloc": "^0.2.0",
    "git-scripts": "git+https://github.com/nkzawa/git-scripts.git",
    "gl-matrix": "^2.6.1",
    "lru-cache": "^4.1.3",
    "finis": "^0.4.1",
    "jsdoc-to-markdown": "^4.0.0",
    "markdownlint-cli": "^0.13.0",
    "nyc": "^12.0.1",
    "apiai": "^4.0.0",
    "blessed": "^0.1.81",
    "typedoc": "^0.13.0",
    "typescript": "^3.1.0",
    "tslint": "^5.11.0",
    "tslint-config-standard": "^8.0.0",
    "ts-node": "^7.0.0",
    "wechaty-puppet-mock": "^0.14.1",
    "wechaty-puppet-puppeteer": "^0.14.2",
    "electron": "3.0.3"
  },
  "files_comment__whitelist_npm_publish": "http://stackoverflow.com/a/8617868/1123955",
  "files": [
    "CHANGELOG",
    "LICENSE",
    "README.md",
    "package.json",
    "bin",
    "dist/bin",
    "dist/index.*",
    "dist/src",
    "src"
  ],
  "git": {
    "scripts": {
      "pre-push": "./scripts/pre-push.sh"
    }
  },
  "publishConfig": {
    "access": "public",
    "tag": "latest"
  },
  "build": {
    "appId": "com.electron.wechat",
    "productName": "微信",
    "copyright": "Copyright © year jumper",
    "asar": false,
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*"
    ],
    "linux": {
      "target": [
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "InstantMessaging;Network",
      "icon": "icon"
    }
  }
}
